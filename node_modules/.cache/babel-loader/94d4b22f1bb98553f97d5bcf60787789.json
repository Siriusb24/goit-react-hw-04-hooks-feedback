{"ast":null,"code":"var _jsxFileName = \"/Users/bohdank/Documents/GitHub/goit-react-hw-02-feedback/src/components/Statistics/Statistics.js\";\nimport PropTypes from 'prop-types';\nimport Notification from 'components/Notification/Nitification';\nimport s from 'components/Statistics/Statistics.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  totalCounter,\n  totalPercentage\n}) {\n  const totalFeedback = totalCounter();\n  const positivePercent = totalPercentage();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: totalFeedback ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: s.list,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: s.item,\n        children: [\"Good: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: good\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: s.item,\n        children: [\"Neutral: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: neutral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: s.item,\n        children: [\"Bad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: bad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: s.item,\n        children: [\"Total: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: totalFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: s.item,\n        children: [\"Positive Feedback: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [positivePercent, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n      message: 'No feedback given'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = Statistics;\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  totalCounter: PropTypes.func.isRequired,\n  totalPercentage: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/Users/bohdank/Documents/GitHub/goit-react-hw-02-feedback/src/components/Statistics/Statistics.js"],"names":["PropTypes","Notification","s","Statistics","good","neutral","bad","totalCounter","totalPercentage","totalFeedback","positivePercent","list","item","propTypes","number","isRequired","func"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,CAAP,MAAc,6CAAd;;AAEA,eAAe,SAASC,UAAT,CAAoB;AACjCC,EAAAA,IADiC;AAEjCC,EAAAA,OAFiC;AAGjCC,EAAAA,GAHiC;AAIjCC,EAAAA,YAJiC;AAKjCC,EAAAA;AALiC,CAApB,EAMZ;AACD,QAAMC,aAAa,GAAGF,YAAY,EAAlC;AACA,QAAMG,eAAe,GAAGF,eAAe,EAAvC;AAEA,sBACE;AAAA,cACGC,aAAa,gBACZ;AAAI,MAAA,SAAS,EAAEP,CAAC,CAACS,IAAjB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAET,CAAC,CAACU,IAAjB;AAAA,0CACQ;AAAA,oBAAOR;AAAP;AAAA;AAAA;AAAA;AAAA,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAI,QAAA,SAAS,EAAEF,CAAC,CAACU,IAAjB;AAAA,6CACW;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,gBADX;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAI,QAAA,SAAS,EAAEH,CAAC,CAACU,IAAjB;AAAA,yCACO;AAAA,oBAAON;AAAP;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAI,QAAA,SAAS,EAAEJ,CAAC,CAACU,IAAjB;AAAA,2CACS;AAAA,oBAAOH;AAAP;AAAA;AAAA;AAAA;AAAA,gBADT;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAaE;AAAI,QAAA,SAAS,EAAEP,CAAC,CAACU,IAAjB;AAAA,uDACqB;AAAA,qBAAOF,eAAP;AAAA;AAAA;AAAA;AAAA;AAAA,gBADrB;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADY,gBAmBZ,QAAC,YAAD;AAAc,MAAA,OAAO,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA;AApBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;KAnCuBP,U;AAqCxBA,UAAU,CAACU,SAAX,GAAuB;AACrBT,EAAAA,IAAI,EAAEJ,SAAS,CAACc,MAAV,CAAiBC,UADF;AAErBV,EAAAA,OAAO,EAAEL,SAAS,CAACc,MAAV,CAAiBC,UAFL;AAGrBT,EAAAA,GAAG,EAAEN,SAAS,CAACc,MAAV,CAAiBC,UAHD;AAIrBR,EAAAA,YAAY,EAAEP,SAAS,CAACgB,IAAV,CAAeD,UAJR;AAKrBP,EAAAA,eAAe,EAAER,SAAS,CAACgB,IAAV,CAAeD;AALX,CAAvB","sourcesContent":["import PropTypes from 'prop-types';\nimport Notification from 'components/Notification/Nitification';\nimport s from 'components/Statistics/Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  totalCounter,\n  totalPercentage,\n}) {\n  const totalFeedback = totalCounter();\n  const positivePercent = totalPercentage();\n\n  return (\n    <div>\n      {totalFeedback ? (\n        <ul className={s.list}>\n          <li className={s.item}>\n            Good: <span>{good}</span>\n          </li>\n          <li className={s.item}>\n            Neutral: <span>{neutral}</span>\n          </li>\n          <li className={s.item}>\n            Bad: <span>{bad}</span>\n          </li>\n          <li className={s.item}>\n            Total: <span>{totalFeedback}</span>\n          </li>\n          <li className={s.item}>\n            Positive Feedback: <span>{positivePercent}%</span>\n          </li>\n        </ul>\n      ) : (\n        <Notification message={'No feedback given'} />\n      )}\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  totalCounter: PropTypes.func.isRequired,\n  totalPercentage: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}