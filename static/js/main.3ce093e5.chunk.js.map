{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/Feedback.module.css","components/Section/Section.module.css","components/Notification/Nitification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Nitification.js","components/Statistics/Statistics.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","list","map","button","item","type","onClick","Notification","message","text","defaultProps","Statistics","good","neutral","bad","totalFeedback","totalCounter","positivePercent","totalPercentage","Section","title","children","section","App","useState","setGood","setNeutral","setBad","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","event","target","textContent","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,gBCAzDD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,OAAS,2B,kBCAvFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,KAAO,6B,uJCEV,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAEjD,OACE,oBAAIC,UAAWC,IAAEC,KAAjB,SACGJ,EAAQK,KAAI,SAAAC,GACX,OACE,oBAAiBJ,UAAWC,IAAEI,KAA9B,SACE,wBACEC,KAAK,SACLC,QAASR,EACTC,UAAWC,IAAEG,OAHf,SAKGA,KANIA,Q,oBCNJ,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGT,UAAWC,IAAES,KAAhB,SAAuBD,IAGhCD,EAAaG,aAAe,CAC1BF,QAAS,qB,oBCJI,SAASG,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IAIMC,EADL,EAFDC,aAIMC,EAFL,EADDC,gBAKA,OACE,8BACGH,EACC,qBAAIhB,UAAWC,IAAEC,KAAjB,UACE,qBAAIF,UAAWC,IAAEI,KAAjB,mBACQ,+BAAOQ,OAEf,qBAAIb,UAAWC,IAAEI,KAAjB,sBACW,+BAAOS,OAElB,qBAAId,UAAWC,IAAEI,KAAjB,kBACO,+BAAOU,OAEd,qBAAIf,UAAWC,IAAEI,KAAjB,oBACS,+BAAOW,OAEhB,qBAAIhB,UAAWC,IAAEI,KAAjB,gCACqB,iCAAOa,EAAP,aAIvB,cAACV,EAAD,CAAcC,QAAS,wB,oBChChB,SAASW,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAAStB,UAAWC,IAAEsB,QAAtB,UACE,oBAAIvB,UAAWC,IAAEoB,MAAjB,SAAyBA,IACxBC,K,MCDQ,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOX,EAAP,KAAgBa,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOV,EAAP,KAAYa,EAAZ,KAEMC,EAAqBhB,EAAOE,EAAMD,EAIlCgB,EAAkCC,KAAKC,MAAc,IAAPnB,EAAcgB,GAwBhE,OACE,qCACE,cAACT,EAAD,CAASC,MAAM,wBAAf,SACE,cAACxB,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAzBW,SAAAkC,GAKnB,OAJsBA,EAAMC,OAArBC,aAKL,IAAK,OACHT,GAAQ,SAAAU,GAAS,OAAIA,EAAU,KAC/B,MACF,IAAK,MACHR,GAAO,SAAAQ,GAAS,OAAIA,EAAU,KAC9B,MACF,IAAK,UACHT,GAAW,SAAAS,GAAS,OAAIA,EAAU,KAClC,MACF,QACE,aAYA,cAAChB,EAAD,CAASC,MAAM,aAAf,SACE,cAACT,EAAD,CACEC,KAAMA,EACNE,IAAKA,EACLD,QAASA,EACTG,aAAcY,EACdV,gBAAiBW,SChD7BO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3ce093e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3oKT7\",\"item\":\"Statistics_item__1vE2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Feedback_list__19jAp\",\"item\":\"Feedback_item__3R7Gj\",\"button\":\"Feedback_button__3PHAQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Nitification_text__4EcfI\"};","import PropTypes from 'prop-types';\nimport s from 'components/FeedbackOptions/Feedback.module.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  //console.log(Object.keys(options))\n  return (\n    <ul className={s.list}>\n      {options.map(button => {\n        return (\n          <li key={button} className={s.item}>\n            <button\n              type=\"button\"\n              onClick={onLeaveFeedback}\n              className={s.button}\n            >\n              {button}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from 'components/Notification/Nitification.module.css';\n\nexport default function Notification({ message }) {\n  return <p className={s.text}>{message}</p>;\n}\n\nNotification.defaultProps = {\n  message: 'No feedback given',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Notification from 'components/Notification/Nitification';\nimport s from 'components/Statistics/Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  totalCounter,\n  totalPercentage,\n}) {\n  const totalFeedback = totalCounter;\n  const positivePercent = totalPercentage;\n\n  return (\n    <div>\n      {totalFeedback ? (\n        <ul className={s.list}>\n          <li className={s.item}>\n            Good: <span>{good}</span>\n          </li>\n          <li className={s.item}>\n            Neutral: <span>{neutral}</span>\n          </li>\n          <li className={s.item}>\n            Bad: <span>{bad}</span>\n          </li>\n          <li className={s.item}>\n            Total: <span>{totalFeedback}</span>\n          </li>\n          <li className={s.item}>\n            Positive Feedback: <span>{positivePercent}%</span>\n          </li>\n        </ul>\n      ) : (\n        <Notification message={'No feedback given'} />\n      )}\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  totalCounter: PropTypes.func.isRequired,\n  totalPercentage: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from 'components/Section/Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h1 className={s.title}>{title}</h1>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import { useState } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from 'components/Section/Section';\nimport './App.css';\n\nexport default function App () {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n \n  const countTotalFeedback = good + bad + neutral;\n  //console.log(countTotalFeedback)\n\n\n  const countPositiveFeedbackPercentage = Math.round((good * 100) / countTotalFeedback);\n  //console.log(countPositiveFeedbackPercentage)\n\n\n  const handleChange = event => {\n    const {textContent} = event.target;\n\n    //console.log(event.target.textContent)\n    \n    switch(textContent){\n      case 'good':\n        setGood(prevState => prevState+1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState+1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState+1);\n        break;\n      default:\n        return;\n    }\n  };\n\n    return (\n      <>\n        <Section title=\"Please leave Feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={handleChange}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            bad={bad}\n            neutral={neutral}\n            totalCounter={countTotalFeedback}\n            totalPercentage={countPositiveFeedbackPercentage}\n          />\n        </Section>\n      </>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}